
public class Solution {

	public static int knapsack(int[] weight, int[] value, int n, int maxWeight) {
		//Your code goes here
         if (n == 0 || maxWeight == 0) {
            return 0;
        }

        int v1 = 0, v2 = 0, result = 0;
        int[] tw = new int[n - 1];
        int[] tv = new int[n - 1];
        for (int i = 0; i < n - 1; i++) {
            tw[i] = weight[i + 1];
            tv[i] = value[i + 1];
        }
        if (weight[0] <= maxWeight) {
            v1 = value[0];
            v1 = v1 + knapsack(tw, tv, n-1, maxWeight - weight[0]);
            v2 = 0;
            v2 = v2 + knapsack(tw, tv, n-1,maxWeight);
            result = Math.max(v1, v2);
        } else {
            result = result + knapsack(tw, tv,n-1, maxWeight);
        }
        return result;
	}

}
